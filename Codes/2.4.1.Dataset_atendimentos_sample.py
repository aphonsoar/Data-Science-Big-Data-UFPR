# Análise e definição das amostras em: https://docs.google.com/spreadsheets/d/1TQFe7UXASWWKoXUjdRMmjy78MdBcgr39_0O6XX6dSdE/edit#gid=794804374

import pickle
import pandas as pd
import numpy as np

#%%
# Base full de atendimentos - origem: "2.3.2.Bag_of_words_atendimentos.py"
atendimentos = pickle.load(open('/home/aphonsoamaral/files/atendimentos_df_full.sav', 'rb'))

#%%
sample1_chat = atendimentos[atendimentos["Tipo_atendimento"] == 'Chat'].sample(n=158, random_state=3)

sample1_ticket_n2 = atendimentos[(atendimentos["Tipo_atendimento"] == 'Ticket') &
                                 (atendimentos["Frente_atendimento"] == 'Serviço N2')].sample(n=104, random_state=3)

sample1_ticket_n1 = atendimentos[(atendimentos["Tipo_atendimento"] == 'Ticket') &
                                 (atendimentos["Frente_atendimento"] == 'Serviço N1')].sample(n=75, random_state=3)

sample1_ticket_n3 = atendimentos[(atendimentos["Tipo_atendimento"] == 'Ticket') &
                                 (atendimentos["Frente_atendimento"] == 'N3')].sample(n=24, random_state=3)

sample1_ticket_ava = atendimentos[(atendimentos["Tipo_atendimento"] == 'Ticket') &
                                  (atendimentos["Frente_atendimento"] == 'Avançado')].sample(n=13, random_state=3)

sample1_ticket_pre = atendimentos[(atendimentos["Tipo_atendimento"] == 'Ticket') &
                                  (atendimentos["Frente_atendimento"] == 'Premium')].sample(n=9, random_state=3)

sample1 = pd.concat([sample1_chat,
                     sample1_ticket_n2,
                     sample1_ticket_n1,
                     sample1_ticket_n3,
                     sample1_ticket_ava,
                     sample1_ticket_pre,], ignore_index=True)

# Save:
#pickle.dump(sample1, open('/home/aphonsoamaral/files/sample1_df.sav', 'wb'))
# Load:
#sample1 = pickle.load(open('/home/aphonsoamaral/files/sample1_df.sav', 'rb'))

print(sample1.shape)

#%%
# Copiar amostra para clipboard:
#sample_clip = sample1[["Tipo_atendimento", "id", "Frente_atendimento"]]
#sample_clip.to_clipboard(excel=True, sep='|', index=False)

#%%
# Exportar amostra para CSV:
sample_clip = sample1[["Tipo_atendimento", "id", "Frente_atendimento"]]
pd.DataFrame.to_csv(sample_clip, sep='|', path_or_buf='/home/aphonsoamaral/aphonso/DSBD-UFPR/TCC/Comp_cliente/z_Scripts_apoio/sample1_atendimentos.csv', index=False)

# Amostra classificada no arquivo: '/home/aphonsoamaral/aphonso/DSBD-UFPR/TCC/Comp_cliente/z_Scripts_apoio/sample1_atendimentos_classificada.csv'

#%%
# SQL com amostra:

"""
with

Base_atendimentos as
(
  select * from CHATS
  union all
  select * from TICKETS
)

select
  Tipo_atendimento, organization_cnpj, Frente_atendimento, id, row_number() over()+1 as linha, texto
from
(
  select *
  from base_atendimentos 
  where id in (
  '2001.527873.RmRmLLsnIksOC',
  '2004.527873.RxMn6qaN2zzaQ',
  '2002.527873.RpekRtKlTrOWs',
  '2003.527873.Rt8MKTefGFnYD',
  '2001.527873.RpA2qiHDNDHZQ',
  '2001.527873.RnYKa9PK56VoC',
  '2007.527873.S5aRarsncW58N',
  '2007.527873.S4Fned4fO3NOW',
  '2004.527873.RvUkWweFllQxW',
  '2005.527873.S0DVyIwuoNAuy',
  '2004.527873.Rv7mxpbOfWsNH',
  '2003.527873.RtV8AHG8HhtGr',
  '2003.527873.RtbS7rw2ijdqE',
  '2005.527873.RyDBejf3Pp85o',
  '2007.527873.S6ER9xAAnnliu',
  '2004.527873.RvftVfxB6Mj41',
  '2001.527873.RnfrgHV3YWaF0',
  '2001.527873.RoyDVcvcB9EY2',
  '2004.527873.RxUC7z1aZ1U1y',
  '2007.527873.S4w6kUFi1udhf',
  '2006.527873.S3PwwUZXSg0ae',
  '2007.527873.S4q4zWJ6GdMFz',
  '2007.527873.S4eYgJ4WgE72p',
  '2002.527873.RqlkPoFv9ZoUO',
  '2003.527873.Rt221eIz3rxY7',
  '2001.527873.RnrquZtpntJCT',
  '2003.527873.Rs5Il5Ij0QiPq',
  '2006.527873.S26RAa5olSaQf',
  '2003.527873.Ru4X3MU4Jvn21',
  '2002.527873.Rpoi0KRL0aHZB',
  '2005.527873.RzLKJBNYepAhp',
  '2002.527873.RqJQRC6EtyPIT',
  '2005.527873.Ry9AQsspDiAFB',
  '2006.527873.S2vpjhYzwG6Af',
  '2002.527873.Rqsm7nh5Wp55s',
  '2005.527873.Ryhj0KGSFAyMQ',
  '2001.527873.Rn6JryjusnPuc',
  '2007.527873.S5xflyl5WiXvW',
  '2006.527873.S2NSezdkIwSx4',
  '2002.527873.RqJKI04XifEfn',
  '2004.527873.Rw9IphbUVneoc',
  '2005.527873.Rze8H1nqK13ry',
  '2005.527873.RzR63Mhxssrvy',
  '2006.527873.S2C1FVJhjpazZ',
  '2003.527873.RsTkhxRfJixAs',
  '2001.527873.RnkkC2DSPYuiH',
  '2006.527873.S3P3DytisLXD2',
  '2004.527873.Rw4HLSnvKjFaz',
  '2006.527873.S1KQ5BwJrqaoL',
  '2003.527873.Rukd8bMfidD6O',
  '2007.527873.S5OUCnwp7xBfH',
  '2002.527873.RrovQtiad2mAS',
  '2007.527873.S5I0b7uY8KnOn',
  '2005.527873.Rz4yJeKEwsuTw',
  '2004.527873.RwjBC25dEzILW',
  '2001.527873.Rmv3hJO6ZSWGg',
  '2001.527873.RnT2H9xyBP4DG',
  '2006.527873.S3IkyH7RmpVVX',
  '2004.527873.RxTYa4oNbLAiG',
  '2003.527873.RtOxEsHkelLC4',
  '2002.527873.Rrp0tehairUWr',
  '2005.527873.RynAb4YdqD3My',
  '2003.527873.Ruk1N9rW2DSQk',
  '2002.527873.Rrimyg9yMi91e',
  '2001.527873.RnB0dL30hJ7va',
  '2002.527873.RqDrDbLdRZu50',
  '2002.527873.RroIUo4eXnrjY',
  '2004.527873.Rwj8wRMsQkbeE',
  '2004.527873.RvV47Asexnk1Y',
  '2006.527873.S26VFA7Nisdnq',
  '2005.527873.Ry1b1JhtQXCuT',
  '2002.527873.Rpe8LN0L8gFT8',
  '2006.527873.S2x8XhgdfA6YS',
  '2006.527873.S1R3KWaUBkoQH',
  '2005.527873.RyPoaeC0jf8HI',
  '2006.527873.S2xAipGhgsNLH',
  '2003.527873.RslAVADxmbxT3',
  '2006.527873.S26gGZkFMYNOS',
  '2006.527873.S2e3GbSLvL5XW',
  '2002.527873.RqIzluDHF7gx4',
  '2001.527873.Rp3uUtyFdSj3G',
  '2007.527873.S5Tr8qRZ2vuaW',
  '2004.527873.Rw90URKDwxfN6',
  '2002.527873.RpRmpXx7bz8BJ',
  '2004.527873.Rv0nlMxFB800m',
  '2001.527873.Rn5bUKSwLuGTH',
  '2006.527873.S0mUMuqPIQFMl',
  '2003.527873.RsHOAk6kktGTU',
  '2001.527873.RoEZyokzr87Ok',
  '2001.527873.RoPZbmn6cBwK4',
  '2007.527873.S50HDFbKjp4QO',
  '2004.527873.RwEqNryhQQ3tY',
  '2001.527873.RommupzKjNRtF',
  '2001.527873.RpBOEb71HoOc7',
  '2004.527873.RwQGmnowuAM4J',
  '2003.527873.Rs6srUUNqIIUo',
  '2002.527873.RppMvGD1bnYCU',
  '2007.527873.S4paZRa0VQTq6',
  '2003.527873.Rt8utPqleXww9',
  '2003.527873.Rt8q9L9GGpyJs',
  '2007.527873.S68nRGqRRnXag',
  '2003.527873.Rs5SADYdg00XF',
  '2001.527873.RnZwPEpHYB3n8',
  '2006.527873.S2lST244ps7Xm',
  '2004.527873.Rvb1AI2a59fU5',
  '2006.527873.S2HS85JCY1vgE',
  '2007.527873.S3an1sde5Dcyo',
  '2001.527873.RnelAk5NvDhhG',
  '2003.527873.RsqhIDEWjYn3o',
  '2007.527873.S4LF7SWwUMaVf',
  '2001.527873.Rnk72djivZKkw',
  '2003.527873.RsMfg9bxsYUlc',
  '2004.527873.RwA0kWL7JBcME',
  '2004.527873.RxThvh07vfOJi',
  '2003.527873.RsTK9DGipYcBy',
  '2005.527873.S06Sq19b4eUl1',
  '2003.527873.Rs5q1B5b3EWJi',
  '2001.527873.RneWF2BftnKy7',
  '2004.527873.Rwuiv1r70BJHK',
  '2001.527873.Rp9xDCB5cZrXL',
  '2004.527873.Rw8hfuL75Lujo',
  '2006.527873.S0lUwCi2clYFi',
  '2004.527873.Rv6R4oYW8JB7P',
  '2002.527873.Rqqyx81ebHw37',
  '2007.527873.S4d0TalGtIYzV',
  '2005.527873.Ry7SR9Sf1wcy3',
  '2007.527873.S6Fbq5jzlG4SK',
  '2006.527873.S20KqYCqj7QAh',
  '2001.527873.RmuO5iDdse1ov',
  '2004.527873.RwFpWx13PJp4L',
  '2004.527873.RxMknNAELQUEb',
  '2007.527873.S5gCy8v4KKo48',
  '2002.527873.RrpN6os18frS0',
  '2004.527873.RvfzI4FzJ5jNr',
  '2007.527873.S4L89hgHbIQ8Z',
  '2001.527873.RmRQuhZrOL1u1',
  '2005.527873.RzMOm4m5DjRmg',
  '2001.527873.Rn13pZZUuJcxC',
  '2002.527873.RppNzLIGexg2K',
  '2006.527873.S2f6HYVQIu2NK',
  '2001.527873.RmR9sYK9Y0UHw',
  '2002.527873.RpRf52ZMPbQvo',
  '2002.527873.RroWiwPKeuXZP',
  '2007.527873.S4N1sd7xW4nft',
  '2003.527873.RskaZs60zE6gR',
  '2005.527873.RzLjWE7ts8cA4',
  '2002.527873.RpRWiCsp1ws9x',
  '2003.527873.RuiqLZ31Z93nf',
  '2003.527873.RsNqpAtoE9IVT',
  '2007.527873.S3Uwv8paESHhh',
  '2004.527873.RwuBxHSOETrNG',
  '2003.527873.RsvwmmHEoKEnX',
  '2001.527873.RooJtcS9LsF3M',
  '2001.527873.Rng5EVcTwcUgq',
  '2001.527873.RmnwAQAZtmFfw',
  '2007.527873.S4Gb6fzoalKs8',
  '2001.527873.RnUCVHZZJH1GI',
  '2002.527873.Rr2llZ1Sl0euH',
  '1114824',
  '871723',
  '1031329',
  '934258',
  '1024077',
  '1084010',
  '1119551',
  '1060985',
  '1031616',
  '971682',
  '1113716',
  '991570',
  '885063',
  '935058',
  '1048442',
  '966850',
  '1112324',
  '894408',
  '875759',
  '1028604',
  '889685',
  '1041190',
  '1120799',
  '1049761',
  '1070583',
  '1055221',
  '1015743',
  '1117392',
  '894822',
  '1007797',
  '1059816',
  '996381',
  '1111718',
  '1034598',
  '918368',
  '1022167',
  '870707',
  '1089008',
  '1021341',
  '994332',
  '954421',
  '902381',
  '1115657',
  '935329',
  '1023056',
  '984953',
  '990504',
  '883539',
  '957505',
  '1100626',
  '1082367',
  '923710',
  '1018873',
  '918812',
  '928059',
  '893768',
  '1030721',
  '876323',
  '955647',
  '885220',
  '881010',
  '954122',
  '873672',
  '964087',
  '1072187',
  '1006418',
  '1049756',
  '1072976',
  '1013175',
  '989535',
  '1007468',
  '872597',
  '881629',
  '927452',
  '1079890',
  '1089251',
  '1089253',
  '1113610',
  '978561',
  '1097057',
  '888511',
  '1056493',
  '943846',
  '998400',
  '1089773',
  '1058819',
  '1043680',
  '1039873',
  '1053095',
  '1032678',
  '1109502',
  '1047643',
  '1021515',
  '1025710',
  '997718',
  '1002216',
  '1046338',
  '897285',
  '1013653',
  '1050049',
  '1015726',
  '881589',
  '902440',
  '921322',
  '1131381',
  '951839',
  '1005755',
  '1123346',
  '983038',
  '963272',
  '870640',
  '1070100',
  '887913',
  '886774',
  '1102393',
  '908507',
  '981162',
  '1086919',
  '900759',
  '1096982',
  '951113',
  '1101520',
  '1038100',
  '1025149',
  '912246',
  '1109616',
  '1076231',
  '894477',
  '1063633',
  '1108607',
  '1065361',
  '1096940',
  '988623',
  '1095209',
  '908844',
  '892584',
  '982219',
  '1117504',
  '873804',
  '1088420',
  '1100817',
  '981382',
  '911476',
  '936541',
  '937736',
  '1055702',
  '1000173',
  '920852',
  '969801',
  '1034222',
  '1104564',
  '971283',
  '1047299',
  '999968',
  '1086729',
  '912346',
  '1053801',
  '1039792',
  '1049122',
  '942179',
  '896586',
  '1077275',
  '1068153',
  '1119470',
  '974386',
  '1059303',
  '986066',
  '956208',
  '1108272',
  '963276',
  '952391',
  '1036587',
  '1058490',
  '966021',
  '991351',
  '938248',
  '1103712',
  '962323',
  '972152',
  '1067925',
  '1053145',
  '904743',
  '923214',
  '1080441',
  '943799',
  '1086151',
  '994417',
  '955629',
  '993509',
  '985674',
  '1055966',
  '1074728',
  '1070956',
  '1032529',
  '1000557',
  '976218',
  '979645',
  '1059213',
  '1075716',
  '983558',
  '1075319',
  '1084084',
  '1037220',
  '1108399',
  '1058933',
  '1131572',
  '1121273',
  '1105681',
  '1088110',
  '1099742',
  '1079727',
  '1076481',
  '1079989',
  '1008275',
  '1087085',
  '1039960',
  '1004668',
  '1012548',
  '1033568',
  '1096932',
  '981599',
  '921075',
  '1074949',
  '1051675',
  '1106279')
  order by 1,2,3,4
)
"""
